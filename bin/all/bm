#!/usr/bin/env bash
# Access bookmarks and open a browser tab with an optional parameter

show_help() {
    echo 'bm - boomarkmarks for browser'
    echo
    echo 'Editing:'
    echo '  -e            Edit global bookmarks list'
    echo
    echo 'Other:'
    echo '  -f            Specify custom bookmark file'
    echo '  -l            List all bookmarks and exit'
    echo '  -r            Use rofi instead of fzf for prompt'
    echo
    echo '  -h            Display help'
}

list="$DOTS_DIR/etc/bm"
search_cmd='fzf -i'
input_cmd='gum input'

action='default'

while getopts 'elrf:' opt; do
  case ${opt} in
    f)
        list=${OPTARG}
        [ ! -f "$list" ] && touch "$list"
        ;;
    e)
        action='edit'
        ;;
    l)
        action='list'
        ;;
    r)
        search_cmd='rofi -dmenu'
        input_cmd=(rofi -dmenu -p '> ')
        ;;
    ?)
      show_help
      exit 1
      ;;
  esac
done

items=$(grep -v '^\(#\|$\)' "$list")

if [ "$action" = 'list' ]; then
    echo "$items"
    exit 0
fi

if [ "$action" = 'edit' ]; then
    nvim "$list"

    formatted=$(sed -E 's#^(http://|https://)##; s#/$##' "$list")
    echo "$formatted" > "$list"

    cd "$(dirname "$list")" || exit 1
    git add "$list" 2> /dev/null || exit 0

    git commit -m 'Update bookmarks'
    git push

    exit $?
fi

# Use fzf to select one of the URLs
url=$(printf '%s\n' "${items[@]}" | $search_cmd)

# If selection was canceled then exit
[ ! "$url" ] && exit 1

# Extract the text inside the curly braces {}
placeholder=$(echo "$url" | grep '{}')

if [ "$placeholder" ]; then
    # Prompt the user for input to replace the placeholder
    input=$(${input_cmd[*]})

    [ ! "$input" ] && exit 1

    # Replace the placeholder with the user input
    url="${url//\{\}/$input}"
fi

open-url "$url"
